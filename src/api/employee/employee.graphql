type Employee {
    id: ID
    first_name: String
    last_name: String
    email: String
    address: String
    phone_number: String
    role: String
    imageId: String
    created_at: String
}

input EmployeeCreateInput {
    first_name: String!
    last_name: String!
    email: String!
    address: String!
    phone_number: String!
    role: String!
    imageId: String!
}

input EmployeeUpdateInput{
    id: ID!
    first_name: String
    last_name: String
    email: String
    address: String
    phone_number: String
    role: String
}

type EmployeeListReturn {
    results: [Employee]
    total: Int
}


type Query {
    getEmployee(id: ID): Employee
    getAllEmployees(page: Int): EmployeeListReturn
}

type Mutation {
    createEmployee(data: EmployeeCreateInput): Employee!
    updateEmployee(data: EmployeeUpdateInput): Employee!
    deleteEmployee(id: ID!): Boolean
}
